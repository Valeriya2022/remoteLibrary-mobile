{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { strings } from \"../../../localization\";\nimport { Button } from \"@rneui/base\";\nimport { Link } from \"react-router-native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GeneralInformation(_ref) {\n  var data = _ref.data,\n      readTo = _ref.readTo,\n      audio = _ref.audio;\n  var store = useSelector(function (state) {\n    return state;\n  });\n  useEffect(function () {\n    strings.setLanguage(store.lang);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.topGrid,\n      children: [_jsx(View, {\n        style: styles.leftGrid,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: data.image\n        })\n      }), _jsxs(View, {\n        style: styles.rightGrid,\n        children: [_jsxs(View, {\n          style: {\n            paddingLeft: 6\n          },\n          children: [_jsxs(Text, {\n            style: styles.citationText,\n            children: [strings.nameText, \": \", data.title]\n          }), _jsxs(Text, {\n            style: styles.citationText,\n            children: [strings.authorText, \": \", data.author]\n          }), _jsxs(Text, {\n            style: styles.citationText,\n            children: [strings.sourceText, \": \", data.source]\n          }), _jsxs(Text, {\n            style: styles.citationText,\n            children: [strings.translateDate, \": \", data.translateDate]\n          }), _jsxs(Text, {\n            style: styles.citationText,\n            children: [strings.publishYearText, \": \", data.publishDate]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonWrapper,\n          children: [_jsx(Link, {\n            style: styles.button,\n            to: readTo,\n            children: _jsx(Text, {\n              style: styles.ButtonText,\n              children: strings.readText\n            })\n          }), _jsx(Link, {\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.ButtonText,\n              children: strings.downloadText\n            })\n          }), _jsx(Button, {\n            titleStyle: styles.ButtonText,\n            containerStyle: styles.buttonContainer,\n            buttonStyle: styles.button,\n            title: strings.saveText\n          })]\n        }), audio && _jsx(View, {\n          style: [styles.buttonWrapper, {\n            paddingTop: 0\n          }],\n          children: _jsx(Button, {\n            titleStyle: styles.ButtonText,\n            containerStyle: styles.buttonContainer,\n            buttonStyle: styles.button,\n            title: strings.Listen\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.downGrid,\n      children: [_jsx(Text, {\n        style: styles.descriptionTitle,\n        children: strings.descriptionText\n      }), _jsx(Text, {\n        style: styles.text,\n        children: data.description\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  topGrid: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  rightGrid: {\n    flex: 1\n  },\n  leftGrid: {\n    flex: 1,\n    paddingHorizontal: 10\n  },\n  image: {\n    maxWidth: 300\n  },\n  citationText: {\n    fontSize: 12,\n    marginBottom: 5\n  },\n  buttonWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingTop: 10\n  },\n  button: {\n    paddingHorizontal: 6,\n    paddingVertical: 0,\n    margin: 0,\n    borderWidth: 1,\n    borderColor: \"rgba(0, 0, 0, 0.05)\",\n    backgroundColor: \"rgba(193, 201, 231, 0.5);\"\n  },\n  buttonContainer: {\n    borderRadius: 0,\n    borderWidth: 1,\n    borderColor: \"rgba(0, 0, 0, 0.05)\",\n    backgroundColor: \"rgba(193, 201, 231, 0.5);\"\n  },\n  ButtonText: {\n    color: \"black\",\n    fontSize: 12\n  },\n  downGrid: {\n    alignItems: \"center\",\n    width: \"100%\",\n    paddingTop: 15,\n    paddingHorizontal: 15\n  },\n  descriptionTitle: {\n    fontSize: 20,\n    paddingBottom: 20\n  },\n  text: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/valeriya.nikiforova/Documents/UCA/Senior/FYP/remoteLibrary-master/components/Details/GeneralInformation/GeneralInformation.js"],"names":["React","useEffect","useSelector","strings","Button","Link","GeneralInformation","data","readTo","audio","store","state","setLanguage","lang","styles","container","topGrid","leftGrid","image","rightGrid","paddingLeft","citationText","nameText","title","authorText","author","sourceText","source","translateDate","publishYearText","publishDate","buttonWrapper","button","ButtonText","readText","downloadText","buttonContainer","saveText","paddingTop","Listen","downGrid","descriptionTitle","descriptionText","text","description","StyleSheet","create","flexDirection","alignItems","flex","paddingHorizontal","maxWidth","fontSize","marginBottom","justifyContent","paddingVertical","margin","borderWidth","borderColor","backgroundColor","borderRadius","color","width","paddingBottom"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,IAAT,QAAqB,qBAArB;;;AACA,eAAe,SAASC,kBAAT,OAAqD;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,KAAS,QAATA,KAAS;AAClE,MAAMC,KAAK,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CAAzB;AACAV,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,OAAO,CAACS,WAAR,CAAoBF,KAAK,CAACG,IAA1B;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA,kBACE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAEH,MAAM,CAACI,KAArB;AAA4B,UAAA,MAAM,EAAEX,IAAI,CAACW;AAAzC;AADF,QADF,EAIE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA,mBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAAb;AAAA,qBACE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEN,MAAM,CAACO,YAApB;AAAA,uBACGlB,OAAO,CAACmB,QADX,QACuBf,IAAI,CAACgB,KAD5B;AAAA,YADF,EAIE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAET,MAAM,CAACO,YAApB;AAAA,uBACGlB,OAAO,CAACqB,UADX,QACyBjB,IAAI,CAACkB,MAD9B;AAAA,YAJF,EAOE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEX,MAAM,CAACO,YAApB;AAAA,uBACGlB,OAAO,CAACuB,UADX,QACyBnB,IAAI,CAACoB,MAD9B;AAAA,YAPF,EAUE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEb,MAAM,CAACO,YAApB;AAAA,uBACGlB,OAAO,CAACyB,aADX,QAC4BrB,IAAI,CAACqB,aADjC;AAAA,YAVF,EAaE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEd,MAAM,CAACO,YAApB;AAAA,uBACGlB,OAAO,CAAC0B,eADX,QAC8BtB,IAAI,CAACuB,WADnC;AAAA,YAbF;AAAA,UADF,EAkBE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEhB,MAAM,CAACiB,aAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEjB,MAAM,CAACkB,MAApB;AAA4B,YAAA,EAAE,EAAExB,MAAhC;AAAA,sBACE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEM,MAAM,CAACmB,UAApB;AAAA,wBAAiC9B,OAAO,CAAC+B;AAAzC;AADF,YADF,EAIE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEpB,MAAM,CAACkB,MAApB;AAAA,sBACE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAElB,MAAM,CAACmB,UAApB;AAAA,wBAAiC9B,OAAO,CAACgC;AAAzC;AADF,YAJF,EAOE,KAAC,MAAD;AACE,YAAA,UAAU,EAAErB,MAAM,CAACmB,UADrB;AAEE,YAAA,cAAc,EAAEnB,MAAM,CAACsB,eAFzB;AAGE,YAAA,WAAW,EAAEtB,MAAM,CAACkB,MAHtB;AAIE,YAAA,KAAK,EAAE7B,OAAO,CAACkC;AAJjB,YAPF;AAAA,UAlBF,EAgCG5B,KAAK,IACJ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACK,MAAM,CAACiB,aAAR,EAAuB;AAAEO,YAAAA,UAAU,EAAE;AAAd,WAAvB,CAAb;AAAA,oBACE,KAAC,MAAD;AACE,YAAA,UAAU,EAAExB,MAAM,CAACmB,UADrB;AAEE,YAAA,cAAc,EAAEnB,MAAM,CAACsB,eAFzB;AAGE,YAAA,WAAW,EAAEtB,MAAM,CAACkB,MAHtB;AAIE,YAAA,KAAK,EAAE7B,OAAO,CAACoC;AAJjB;AADF,UAjCJ;AAAA,QAJF;AAAA,MADF,EAiDE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEzB,MAAM,CAAC0B,QAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE1B,MAAM,CAAC2B,gBAApB;AAAA,kBAAuCtC,OAAO,CAACuC;AAA/C,QADF,EAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE5B,MAAM,CAAC6B,IAApB;AAAA,kBAA2BpC,IAAI,CAACqC;AAAhC,QAFF;AAAA,MAjDF;AAAA,IADF;AAwDD;AACD,IAAM9B,MAAM,GAAG+B,UAAU,CAACC,MAAX,CAAkB;AAC/B/B,EAAAA,SAAS,EAAE,EADoB;AAE/BC,EAAAA,OAAO,EAAE;AAAE+B,IAAAA,aAAa,EAAE,KAAjB;AAAwBC,IAAAA,UAAU,EAAE;AAApC,GAFsB;AAG/B7B,EAAAA,SAAS,EAAE;AAAE8B,IAAAA,IAAI,EAAE;AAAR,GAHoB;AAI/BhC,EAAAA,QAAQ,EAAE;AAAEgC,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,iBAAiB,EAAE;AAA9B,GAJqB;AAK/BhC,EAAAA,KAAK,EAAE;AACLiC,IAAAA,QAAQ,EAAE;AADL,GALwB;AAQ/B9B,EAAAA,YAAY,EAAE;AACZ+B,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,YAAY,EAAE;AAFF,GARiB;AAY/BtB,EAAAA,aAAa,EAAE;AACbgB,IAAAA,aAAa,EAAE,KADF;AAEbO,IAAAA,cAAc,EAAE,QAFH;AAGbhB,IAAAA,UAAU,EAAE;AAHC,GAZgB;AAiB/BN,EAAAA,MAAM,EAAE;AACNkB,IAAAA,iBAAiB,EAAE,CADb;AAENK,IAAAA,eAAe,EAAE,CAFX;AAGNC,IAAAA,MAAM,EAAE,CAHF;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAE,qBALP;AAMNC,IAAAA,eAAe,EAAE;AANX,GAjBuB;AAyB/BvB,EAAAA,eAAe,EAAE;AACfwB,IAAAA,YAAY,EAAE,CADC;AAEfH,IAAAA,WAAW,EAAE,CAFE;AAGfC,IAAAA,WAAW,EAAE,qBAHE;AAIfC,IAAAA,eAAe,EAAE;AAJF,GAzBc;AA+B/B1B,EAAAA,UAAU,EAAE;AAAE4B,IAAAA,KAAK,EAAE,OAAT;AAAkBT,IAAAA,QAAQ,EAAE;AAA5B,GA/BmB;AAgC/BZ,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,UAAU,EAAE,QADJ;AAERc,IAAAA,KAAK,EAAE,MAFC;AAGRxB,IAAAA,UAAU,EAAE,EAHJ;AAIRY,IAAAA,iBAAiB,EAAE;AAJX,GAhCqB;AAsC/BT,EAAAA,gBAAgB,EAAE;AAAEW,IAAAA,QAAQ,EAAE,EAAZ;AAAgBW,IAAAA,aAAa,EAAE;AAA/B,GAtCa;AAuC/BpB,EAAAA,IAAI,EAAE;AAAES,IAAAA,QAAQ,EAAE;AAAZ;AAvCyB,CAAlB,CAAf","sourcesContent":["import { View, Text, StyleSheet, Image } from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { strings } from \"../../../localization\";\r\nimport { Button } from \"@rneui/base\";\r\nimport { Link } from \"react-router-native\";\r\nexport default function GeneralInformation({ data, readTo, audio }) {\r\n  const store = useSelector((state) => state);\r\n  useEffect(() => {\r\n    strings.setLanguage(store.lang);\r\n  }, []);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.topGrid}>\r\n        <View style={styles.leftGrid}>\r\n          <Image style={styles.image} source={data.image} />\r\n        </View>\r\n        <View style={styles.rightGrid}>\r\n          <View style={{ paddingLeft: 6 }}>\r\n            <Text style={styles.citationText}>\r\n              {strings.nameText}: {data.title}\r\n            </Text>\r\n            <Text style={styles.citationText}>\r\n              {strings.authorText}: {data.author}\r\n            </Text>\r\n            <Text style={styles.citationText}>\r\n              {strings.sourceText}: {data.source}\r\n            </Text>\r\n            <Text style={styles.citationText}>\r\n              {strings.translateDate}: {data.translateDate}\r\n            </Text>\r\n            <Text style={styles.citationText}>\r\n              {strings.publishYearText}: {data.publishDate}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.buttonWrapper}>\r\n            <Link style={styles.button} to={readTo}>\r\n              <Text style={styles.ButtonText}>{strings.readText}</Text>\r\n            </Link>\r\n            <Link style={styles.button}>\r\n              <Text style={styles.ButtonText}>{strings.downloadText}</Text>\r\n            </Link>\r\n            <Button\r\n              titleStyle={styles.ButtonText}\r\n              containerStyle={styles.buttonContainer}\r\n              buttonStyle={styles.button}\r\n              title={strings.saveText}\r\n            />\r\n          </View>\r\n          {audio && (\r\n            <View style={[styles.buttonWrapper, { paddingTop: 0 }]}>\r\n              <Button\r\n                titleStyle={styles.ButtonText}\r\n                containerStyle={styles.buttonContainer}\r\n                buttonStyle={styles.button}\r\n                title={strings.Listen}\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n      <View style={styles.downGrid}>\r\n        <Text style={styles.descriptionTitle}>{strings.descriptionText}</Text>\r\n        <Text style={styles.text}>{data.description}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  topGrid: { flexDirection: \"row\", alignItems: \"center\" },\r\n  rightGrid: { flex: 1 },\r\n  leftGrid: { flex: 1, paddingHorizontal: 10 },\r\n  image: {\r\n    maxWidth: 300,\r\n  },\r\n  citationText: {\r\n    fontSize: 12,\r\n    marginBottom: 5,\r\n  },\r\n  buttonWrapper: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    paddingTop: 10,\r\n  },\r\n  button: {\r\n    paddingHorizontal: 6,\r\n    paddingVertical: 0,\r\n    margin: 0,\r\n    borderWidth: 1,\r\n    borderColor: \"rgba(0, 0, 0, 0.05)\",\r\n    backgroundColor: \"rgba(193, 201, 231, 0.5);\",\r\n  },\r\n  buttonContainer: {\r\n    borderRadius: 0,\r\n    borderWidth: 1,\r\n    borderColor: \"rgba(0, 0, 0, 0.05)\",\r\n    backgroundColor: \"rgba(193, 201, 231, 0.5);\",\r\n  },\r\n  ButtonText: { color: \"black\", fontSize: 12 },\r\n  downGrid: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    paddingTop: 15,\r\n    paddingHorizontal: 15,\r\n  },\r\n  descriptionTitle: { fontSize: 20, paddingBottom: 20 },\r\n  text: { fontSize: 15 },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}