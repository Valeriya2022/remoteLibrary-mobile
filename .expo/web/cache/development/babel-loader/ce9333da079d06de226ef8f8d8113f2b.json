{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Logo from \"../../Images/Icons/logo.png\";\nimport Menu from \"../../Images/Icons/menu.png\";\nimport Notification from \"../../Images/Icons/notification.png\";\nimport Login from \"../../Images/Icons/login.png\";\nimport Theme from \"../../Images/Icons/theme.png\";\nimport { strings } from \"../../localization.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Overlay } from \"@rneui/base\";\nimport HeaderMenu from \"./ModalPages/HeaderMenu\";\nimport HeaderLogin from \"./ModalPages/HeaderLogin\";\nimport CustomSearchBar from \"./CustomSearchBar/CustomSearchBar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Header() {\n  var _useState = useState(\"closed\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var _useState3 = useState(\"ru\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lng = _useState4[0],\n      setLng = _useState4[1];\n\n  var dispatch = useDispatch();\n  var store = useSelector(function (state) {\n    return state;\n  });\n\n  function changeLng() {\n    if (strings.getLanguage() === \"ru\") {\n      AsyncStorage.setItem(\"lng\", \"kg\");\n      strings.setLanguage(\"kg\");\n      setLng(\"КЫРГ\");\n    } else if (strings.getLanguage() === \"kg\") {\n      AsyncStorage.setItem(\"lng\", \"en\");\n      strings.setLanguage(\"en\");\n      setLng(\"EN\");\n    } else if (strings.getLanguage() === \"en\") {\n      AsyncStorage.setItem(\"lng\", \"ru\");\n      strings.setLanguage(\"ru\");\n      setLng(\"РУС\");\n    }\n\n    dispatch({\n      type: \"CHANGE_LANG\",\n      lang: strings.getLanguage()\n    });\n  }\n\n  useEffect(function _callee() {\n    var lgn_dict;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lgn_dict = {\n              en: \"EN\",\n              ru: \"РУС\",\n              kg: \"КЫРГ\"\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"lng\"));\n\n          case 3:\n            _context.t0 = _context.sent;\n\n            if (!(_context.t0 !== null)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.t1 = strings;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"lng\"));\n\n          case 8:\n            _context.t2 = _context.sent;\n\n            _context.t1.setLanguage.call(_context.t1, _context.t2);\n\n            _context.t3 = setLng;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"lng\"));\n\n          case 13:\n            _context.t4 = _context.sent;\n            _context.t5 = lgn_dict[_context.t4];\n            (0, _context.t3)(_context.t5);\n            _context.next = 19;\n            break;\n\n          case 18:\n            if (strings.getLanguage() === \"ru\") {\n              setLng(\"РУС\");\n            } else if (strings.getLanguage() === \"kg\") {\n              setLng(\"КЫРГ\");\n            } else if (strings.getLanguage() === \"en\") {\n              setLng(\"EN\");\n            }\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [modalState && _jsxs(Overlay, {\n      isVisible: modalState != \"closed\",\n      style: styles.modal,\n      onBackdropPress: function onBackdropPress() {\n        return setModalState(\"closed\");\n      },\n      overlayStyle: [styles.modalOverlay, {\n        top: modalState == \"menu\" ? \"-35%\" : \"-20%\",\n        left: modalState == \"menu\" ? \"30%\" : 0\n      }],\n      children: [modalState === \"menu\" && _jsx(HeaderMenu, {\n        strings: strings,\n        closeMenu: function closeMenu() {\n          return setModalState(\"closed\");\n        }\n      }), modalState === \"login\" && _jsx(HeaderLogin, {\n        strings: strings,\n        closeMenu: function closeMenu() {\n          return setModalState(\"closed\");\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.wrapper,\n      children: _jsxs(View, {\n        style: styles.grid,\n        children: [_jsxs(View, {\n          style: styles.subgridLeft,\n          children: [_jsx(Link, {\n            to: \"/\",\n            children: _jsx(View, {\n              style: styles.item,\n              children: _jsx(Image, {\n                style: styles.logoImage,\n                source: Logo,\n                alt: \"Logo\"\n              })\n            })\n          }), _jsx(View, {\n            style: styles.item,\n            children: _jsx(Link, {\n              to: \"/\",\n              children: _jsx(Text, {\n                style: styles.logo,\n                children: \"BilimHub\"\n              })\n            })\n          })]\n        }), !store.cuttedHeader && _jsx(View, {\n          style: styles.item,\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return changeLng();\n            },\n            underlayColor: \"white\",\n            children: _jsx(View, {\n              style: styles.button,\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\" \", String(lng)]\n              })\n            })\n          })\n        }), !store.cuttedHeader && _jsx(View, {\n          style: styles.item,\n          children: _jsx(Image, {\n            style: styles.notification_img,\n            source: Notification,\n            alt: \"notification\"\n          })\n        }), !store.cuttedHeader && _jsx(View, {\n          style: styles.item,\n          children: _jsx(TouchableHighlight, {\n            onPress: function onPress() {\n              return setModalState(\"login\");\n            },\n            underlayColor: \"white\",\n            children: _jsx(Image, {\n              style: styles.login_img,\n              source: Login,\n              alt: \"login\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.item,\n          children: _jsx(Image, {\n            style: styles.theme_img,\n            source: Theme,\n            alt: \"theme\"\n          })\n        }), _jsx(View, {\n          style: styles.item,\n          children: _jsx(TouchableHighlight, {\n            onPress: function onPress() {\n              return setModalState(\"menu\");\n            },\n            underlayColor: \"white\",\n            children: _jsx(Image, {\n              style: styles.menu_img,\n              source: Menu,\n              alt: \"menu\"\n            })\n          })\n        })]\n      })\n    }), !store.cuttedHeader && _jsx(CustomSearchBar, {\n      strings: strings\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  logo: {\n    fontSize: 28,\n    width: 133,\n    height: 67,\n    paddingTop: 30,\n    lineHeight: 34,\n    fontFamily: \"Roboto\",\n    color: \"#374B73\"\n  },\n  logoImage: {\n    height: 68,\n    width: 58\n  },\n  grid: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  subgridLeft: {\n    width: \"40%\",\n    flexDirection: \"row\",\n    marginRight: \"auto\"\n  },\n  item: {\n    justifyContent: \"center\"\n  },\n  wrapper: {\n    flexDirection: \"row\"\n  },\n  button: {\n    alignItems: \"center\"\n  },\n  buttonText: {\n    textAlign: \"center\",\n    padding: 10,\n    color: \"black\",\n    fontSize: 14\n  },\n  menu_img: {\n    width: 40,\n    height: 40,\n    margin: 3\n  },\n  theme_img: {\n    width: 30,\n    height: 30,\n    margin: 5\n  },\n  login_img: {\n    width: 32,\n    height: 33\n  },\n  notification_img: {\n    width: 30,\n    height: 30\n  },\n  modal: {\n    backgroundColor: \"white\"\n  },\n  modalOverlay: {\n    backgroundColor: \"white\",\n    borderRadius: 28,\n    padding: 0,\n    overflow: \"hidden\"\n  }\n});","map":{"version":3,"sources":["C:/Users/valeriya.nikiforova/Documents/UCA/Senior/FYP/remoteLibrary-master/components/Header/Header.js"],"names":["Logo","Menu","Notification","Login","Theme","strings","React","useEffect","useState","Link","AsyncStorage","Overlay","HeaderMenu","HeaderLogin","CustomSearchBar","useDispatch","useSelector","Header","modalState","setModalState","lng","setLng","dispatch","store","state","changeLng","getLanguage","setItem","setLanguage","type","lang","lgn_dict","en","ru","kg","getItem","styles","container","modal","modalOverlay","top","left","wrapper","grid","subgridLeft","item","logoImage","logo","cuttedHeader","button","buttonText","String","notification_img","login_img","theme_img","menu_img","StyleSheet","create","fontSize","width","height","paddingTop","lineHeight","fontFamily","color","flexDirection","justifyContent","marginRight","alignItems","textAlign","padding","margin","backgroundColor","borderRadius","overflow"],"mappings":"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","sourcesContent":["import Logo from \"../../Images/Icons/logo.png\";\r\nimport Menu from \"../../Images/Icons/menu.png\";\r\nimport Notification from \"../../Images/Icons/notification.png\";\r\nimport Login from \"../../Images/Icons/login.png\";\r\nimport Theme from \"../../Images/Icons/theme.png\";\r\nimport { strings } from \"../../localization.js\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableHighlight,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Overlay } from \"@rneui/base\";\r\nimport HeaderMenu from \"./ModalPages/HeaderMenu\";\r\nimport HeaderLogin from \"./ModalPages/HeaderLogin\";\r\nimport CustomSearchBar from \"./CustomSearchBar/CustomSearchBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function Header() {\r\n  const [modalState, setModalState] = useState(\"closed\");\r\n  const [lng, setLng] = useState(\"ru\");\r\n  const dispatch = useDispatch();\r\n  const store = useSelector((state) => state);\r\n  function changeLng() {\r\n    if (strings.getLanguage() === \"ru\") {\r\n      AsyncStorage.setItem(\"lng\", \"kg\");\r\n      strings.setLanguage(\"kg\");\r\n      setLng(\"КЫРГ\");\r\n    } else if (strings.getLanguage() === \"kg\") {\r\n      AsyncStorage.setItem(\"lng\", \"en\");\r\n      strings.setLanguage(\"en\");\r\n      setLng(\"EN\");\r\n    } else if (strings.getLanguage() === \"en\") {\r\n      AsyncStorage.setItem(\"lng\", \"ru\");\r\n      strings.setLanguage(\"ru\");\r\n      setLng(\"РУС\");\r\n    }\r\n    dispatch({ type: \"CHANGE_LANG\", lang: strings.getLanguage() });\r\n  }\r\n  useEffect(async () => {\r\n    let lgn_dict = { en: \"EN\", ru: \"РУС\", kg: \"КЫРГ\" };\r\n    if ((await AsyncStorage.getItem(\"lng\")) !== null) {\r\n      strings.setLanguage(await AsyncStorage.getItem(\"lng\"));\r\n      setLng(lgn_dict[await AsyncStorage.getItem(\"lng\")]);\r\n    } else if (strings.getLanguage() === \"ru\") {\r\n      setLng(\"РУС\");\r\n    } else if (strings.getLanguage() === \"kg\") {\r\n      setLng(\"КЫРГ\");\r\n    } else if (strings.getLanguage() === \"en\") {\r\n      setLng(\"EN\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <View style={styles.container}>\r\n      {modalState && (\r\n        <Overlay\r\n          isVisible={modalState != \"closed\"}\r\n          style={styles.modal}\r\n          onBackdropPress={() => setModalState(\"closed\")}\r\n          overlayStyle={[\r\n            styles.modalOverlay,\r\n            {\r\n              top: modalState == \"menu\" ? \"-35%\" : \"-20%\",\r\n              left: modalState == \"menu\" ? \"30%\" : 0,\r\n            },\r\n          ]}\r\n        >\r\n          {modalState === \"menu\" && (\r\n            <HeaderMenu\r\n              strings={strings}\r\n              closeMenu={() => setModalState(\"closed\")}\r\n            />\r\n          )}\r\n          {modalState === \"login\" && (\r\n            <HeaderLogin\r\n              strings={strings}\r\n              closeMenu={() => setModalState(\"closed\")}\r\n            />\r\n          )}\r\n        </Overlay>\r\n      )}\r\n      <View style={styles.wrapper}>\r\n        <View style={styles.grid}>\r\n          <View style={styles.subgridLeft}>\r\n            <Link to=\"/\">\r\n              <View style={styles.item}>\r\n                <Image\r\n                  style={styles.logoImage}\r\n                  source={Logo}\r\n                  alt=\"Logo\"\r\n                ></Image>\r\n              </View>\r\n            </Link>\r\n            <View style={styles.item}>\r\n              <Link to=\"/\">\r\n                <Text style={styles.logo}>BilimHub</Text>\r\n              </Link>\r\n            </View>\r\n          </View>\r\n          {!store.cuttedHeader && (\r\n            <View style={styles.item}>\r\n              <TouchableOpacity\r\n                onPress={() => changeLng()}\r\n                underlayColor=\"white\"\r\n              >\r\n                <View style={styles.button}>\r\n                  <Text style={styles.buttonText}> {String(lng)}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n          {!store.cuttedHeader && (\r\n            <View style={styles.item}>\r\n              <Image\r\n                style={styles.notification_img}\r\n                source={Notification}\r\n                alt=\"notification\"\r\n              ></Image>\r\n            </View>\r\n          )}\r\n          {!store.cuttedHeader && (\r\n            <View style={styles.item}>\r\n              <TouchableHighlight\r\n                onPress={() => setModalState(\"login\")}\r\n                underlayColor=\"white\"\r\n              >\r\n                <Image style={styles.login_img} source={Login} alt=\"login\" />\r\n              </TouchableHighlight>\r\n            </View>\r\n          )}\r\n          <View style={styles.item}>\r\n            <Image style={styles.theme_img} source={Theme} alt=\"theme\" />\r\n          </View>\r\n          <View style={styles.item}>\r\n            <TouchableHighlight\r\n              onPress={() => setModalState(\"menu\")}\r\n              underlayColor=\"white\"\r\n            >\r\n              <Image style={styles.menu_img} source={Menu} alt=\"menu\"></Image>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      {!store.cuttedHeader && <CustomSearchBar strings={strings} />}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  logo: {\r\n    fontSize: 28,\r\n    width: 133,\r\n    height: 67,\r\n    paddingTop: 30,\r\n    lineHeight: 34,\r\n    fontFamily: \"Roboto\",\r\n    color: \"#374B73\",\r\n  },\r\n  logoImage: {\r\n    height: 68,\r\n    width: 58,\r\n  },\r\n  grid: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  subgridLeft: {\r\n    width: \"40%\",\r\n    flexDirection: \"row\",\r\n    marginRight: \"auto\",\r\n  },\r\n  item: {\r\n    justifyContent: \"center\",\r\n  },\r\n  wrapper: {\r\n    flexDirection: \"row\",\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n    color: \"black\",\r\n    fontSize: 14,\r\n  },\r\n  menu_img: {\r\n    width: 40,\r\n    height: 40,\r\n    margin: 3,\r\n  },\r\n  theme_img: {\r\n    width: 30,\r\n    height: 30,\r\n    margin: 5,\r\n  },\r\n  login_img: {\r\n    width: 32,\r\n    height: 33,\r\n  },\r\n  notification_img: {\r\n    width: 30,\r\n    height: 30,\r\n  },\r\n  modal: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  modalOverlay: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 28,\r\n    padding: 0,\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}